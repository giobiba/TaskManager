@model TaskManager.Models.Project
<br />
@if (ViewBag.message != null)
{
    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" style=" opacity: 100%">
        <div class="toast-header">
            <strong class="mr-auto">Task Manager</strong>
            <small>1 sec ago</small>

        </div>
        <div class="toast-body">
            @ViewBag.message
        </div>
    </div>
}

@using (Html.BeginForm(actionName: "Edit", controllerName: "Projects"))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)
    <strong>@Html.Label("Title", "Titlu Proiect")</strong>
    <br />
    @Html.EditorFor(m => m.Title, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(m => m.Title, "Titlul este obligatoriu", new
    {
        @class = "text-danger "
    })
    <br />
    <br />

    <strong>@Html.Label("Description", "Descriere proiect")</strong>
    <br />
    @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "form-control" } })
    <br />
    <br />

    <strong>@Html.Label("Date_St", "Data de inceput")</strong>
    <br />
    @Html.EditorFor(model => model.Date_St, new { htmlAttributes = new { @Value = @Model.Date_St.ToString("yyyy-MM-dd"), @class = "customclass" } })

    @Html.ValidationMessageFor(m => m.Date_St, "Data de starts este obligatoriu", new
    {
        @class = "text-danger "
    })
    <br />
    <br />

    <strong>@Html.Label("Date_End", "Data de final")</strong>
    <br />
    @Html.EditorFor(model => model.Date_End, new { htmlAttributes = new { @Value = @Model.Date_End.ToString("yyyy-MM-dd"), @class = "customclass" } })
    @Html.ValidationMessageFor(m => m.Date_End, "Data de final este obligatoriu", new
    {
        @class = "text-danger "
    })
    <br />
    @Html.HiddenFor(model => model.id_team)
    <br />

    <button class="button6" style="background-color: #24ebae;" type="submit">Editeaza proiect</button>
}